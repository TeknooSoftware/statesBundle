# src/Resources/config/services.yml
parameters:
  #bundle services class names
  teknoo.states.service.composer.finder.class: 'Teknoo\Bundle\StatesBundle\Service\ComposerFinderService'
  teknoo.states.service.factory.repository.class: 'ArrayObject'
  teknoo.states.service.bootstrap.class: 'Teknoo\Bundle\StatesBundle\Service\BootstrapService'

  #doctrine listener
  teknoo.states.listener.doctrine.load.class.meta.class: 'Teknoo\Bundle\StatesBundle\Doctrine\LoadClassMetaListener'

  #states loaders classes
  teknoo.states.loader.class: 'Teknoo\States\Loader\LoaderComposer'
  teknoo.states.finder.class: 'Teknoo\States\Loader\FinderComposerIntegrated'

  #default parameter for bootstraping
  teknoo.states.bootstraping.autoloader.register.function: "spl_autoload_register"
  teknoo.states.bootstraping.factory.repository.class.name: "%teknoo.states.service.factory.repository.class%"
  teknoo.states.bootstraping.loader.class.name: "%teknoo.states.loader.class%"
  teknoo.states.bootstraping.finder.class.name: "%teknoo.states.finder.class%"

services:
  #composer finder
  teknoo.states.service.composer.finder:
    class: "%teknoo.states.service.composer.finder.class%"
    public: false

  teknoo.states.service.factory.repository:
    class: "%teknoo.states.bootstraping.factory.repository.class.name%"
    public: false

  teknoo.states.listener.doctrine.load.class.meta:
    class: "%teknoo.states.listener.doctrine.load.class.meta.class%"
    public: false
    tags:
      - { name: 'doctrine.event_listener', event: 'loadClassMetadata' }

  teknoo.states.service.bootstrap:
    class: "%teknoo.states.service.bootstrap.class%"
    public: false
    arguments:
      - "@teknoo.states.service.composer.finder"
      - "@teknoo.states.service.factory.repository"
      - "@teknoo.states.listener.doctrine.load.class.meta"
      - "%teknoo.states.bootstraping.autoloader.register.function%"

  teknoo.states.loader:
    class: "%teknoo.states.bootstraping.loader.class.name%"
    factory: ["@teknoo.states.service.bootstrap", "getLoaderInstance"]
    arguments:
      - "%teknoo.states.bootstraping.loader.class.name%"
      - "%teknoo.states.bootstraping.finder.class.name%"
